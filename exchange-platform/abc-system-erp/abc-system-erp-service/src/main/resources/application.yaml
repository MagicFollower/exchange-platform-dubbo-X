spring:
  application:
    name: abc-system-erp
#  main:
#    web-application-type: none
  ### Druid多数据源配置
  datasource:
    druid:
      base:
        url: jdbc:mysql://192.168.204.101:23306/abc_group_erp_base?autoReconnect=true&useServerPreparedStmts=true&cachePrepStmts=true&rewriteBatchedStatements=true&allowMultiQueries=true&characterEncoding=utf8&allowPublicKeyRetrieval=true&connectionTimeZone=SERVER
        username: root
        ### {@code java -cp druid-1.2.19.jar com.alibaba.druid.filter.config.ConfigTools your_db_password }
        password: ZYWnAmMbaYvdVirAoqbgMXPA7cIytb8tnkJj99CKzkiHJF+V+LawoSj9yuyoy5nmOtoRa9WzWbceKuWoh24VIw==
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        initial-size: 5
        min-idle: 5
        max-active: 20
        max-wait: 60000
        time-between-eviction-runs-millis: 60000
        min-evictable-idle-time-millis: 300000
        validation-query: SELECT 1
        test-while-idle: true
        test-on-borrow: false
        test-on-return: false
        filters: config
        public-key: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJnI09eW+aUcxZZBHue4GR3DIJ3ulFlWVxYhGJ1Qe5Yax9tox9dBenFybR3dxv1rXR+6h4H2mqupPUdkKGSlLFMCAwEAAQ==
        connection-properties: config.decrypt=true;config.decrypt.key=${spring.datasource.druid.base.public-key}
      business:
        url: jdbc:mysql://192.168.204.101:23306/abc_group_erp_business?autoReconnect=true&useServerPreparedStmts=true&cachePrepStmts=true&rewriteBatchedStatements=true&allowMultiQueries=true&characterEncoding=utf8&allowPublicKeyRetrieval=true&connectionTimeZone=SERVER
        username: root
        password: ZYWnAmMbaYvdVirAoqbgMXPA7cIytb8tnkJj99CKzkiHJF+V+LawoSj9yuyoy5nmOtoRa9WzWbceKuWoh24VIw==
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        initial-size: 5
        min-idle: 5
        max-active: 20
        max-wait: 60000
        time-between-eviction-runs-millis: 60000
        min-evictable-idle-time-millis: 300000
        validation-query: SELECT 1
        test-while-idle: true
        test-on-borrow: false
        test-on-return: false
        filters: config
        public-key: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJnI09eW+aUcxZZBHue4GR3DIJ3ulFlWVxYhGJ1Qe5Yax9tox9dBenFybR3dxv1rXR+6h4H2mqupPUdkKGSlLFMCAwEAAQ==
        connection-properties: config.decrypt=true;config.decrypt.key=${spring.datasource.druid.business.public-key}

dubbo:
  registry:
    address: zookeeper://localhost:2181
    timeout: 60000  # 等价于address连接地址后添加?init.timeout=60000
  scan:
    base-packages: com.abc.exchange.erp
  application:
    name: ${spring.application.name}
    logger: slf4j
    qos-enable: false
    # https://cn.dubbo.apache.org/zh-cn/overview/mannual/java-sdk/advanced-features-and-usage/security/class-check/
    # 检查模式分为三个级别：STRICT（默认） 严格检查，WARN 告警，DISABLE 禁用。
    #   STRICT 严格检查：禁止反序列化所有不在允许序列化列表（白名单）中的类。
    #   WARN 告警：仅禁止序列化所有在不允许序列化列表中（黑名单）的类，同时在反序列化不在允许序列化列表（白名单）中类的时候通过日志进行告警。
    #   DISABLE 禁用：不进行任何检查。
    serialize-check-status: STRICT
    # 开启检查，不允许反序列化未实现Serializable接口的类
    check-serializable: true
  protocol:
    name: dubbo
    port: 20881
  consumer:
    check: false
    retries: 0
    #timeout: 30000

server:
  port: 8888